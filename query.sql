DROP DATABASE IF EXISTS data;

CREATE DATABASE data;

USE data;

DROP TABLE IF EXISTS client_0;
CREATE TABLE client_0
(
	ID INT,
	SHIPPING_MODE VARCHAR(100),
	SHIPPING_PRICE VARCHAR(100),
	WARRANTIES_FLG VARCHAR(100),
	WARRANTIES_PRICE VARCHAR(100),
	CARD_PAYMENT INT(1),
	COUPON_PAYMENT INT(1),
	RSP_PAYMENT INT(1),
	WALLET_PAYMENT INT(1),
	PRICECLUB_STATUS VARCHAR(100),
	REGISTRATION_DATE VARCHAR(100),
	PURCHASE_COUNT VARCHAR(100),
	BUYER_BIRTHDAY_DATE VARCHAR(100),
	BUYER_DEPARTMENT INT,
	BUYING_DATE VARCHAR(100),
	SELLER_SCORE_COUNT VARCHAR(100),
	SELLER_SCORE_AVERAGE INT,
	SELLER_COUNTRY VARCHAR(100),
	SELLER_DEPARTMENT VARCHAR(100),
	PRODUCT_TYPE VARCHAR(100),
	PRODUCT_FAMILY VARCHAR(100),
	ITEM_PRICE VARCHAR(100),
	COUNTRY_KEY VARCHAR(100)
);

LOAD DATA LOCAL INFILE 'C:/Users/Utilisateur/Desktop/dev/sql/tp_sql_1/Base_eval.csv' 
INTO TABLE data.client_0 
FIELDS TERMINATED BY ';'
IGNORE 1 LINES;

SELECT COUNT(*) FROM client_0;
SELECT * FROM client_0 LIMIT 100;


SELECT COUNT(*) FROM (SELECT
	ID,
	SHIPPING_MODE,
	SHIPPING_PRICE,
	WARRANTIES_FLG,
	WARRANTIES_PRICE,
	CARD_PAYMENT,
	COUPON_PAYMENT,
	RSP_PAYMENT,
	WALLET_PAYMENT,
	PRICECLUB_STATUS,
	REGISTRATION_DATE,
	PURCHASE_COUNT,
	BUYER_BIRTHDAY_DATE,
	BUYER_DEPARTMENT,
	BUYING_DATE,
	SELLER_SCORE_COUNT,
	SELLER_SCORE_AVERAGE,
	SELLER_COUNTRY,
	SELLER_DEPARTMENT,
	PRODUCT_TYPE,
	PRODUCT_FAMILY,
	ITEM_PRICE,
	COUNTRY_KEY,
	COUNT(*)
FROM
	client_0
GROUP BY 
	ID,
	SHIPPING_MODE,
	SHIPPING_PRICE,
	WARRANTIES_FLG,
	WARRANTIES_PRICE,
	CARD_PAYMENT,
	COUPON_PAYMENT,
	RSP_PAYMENT,
	WALLET_PAYMENT,
	PRICECLUB_STATUS,
	REGISTRATION_DATE,
	PURCHASE_COUNT,
	BUYER_BIRTHDAY_DATE,
	BUYER_DEPARTMENT,
	BUYING_DATE,
	SELLER_SCORE_COUNT,
	SELLER_SCORE_AVERAGE,
	SELLER_COUNTRY,
	SELLER_DEPARTMENT,
	PRODUCT_TYPE,
	PRODUCT_FAMILY,
	ITEM_PRICE,
	COUNTRY_KEY
HAVING COUNT(*) > 1) AS t1;

DROP TABLE IF EXISTS client_1;
CREATE TABLE client_1 AS
SELECT DISTINCT * FROM client_0

SELECT COUNT(*) FROM client_1
SELECT * FROM client_1 LIMIT 100;

SELECT COUNT(*)
FROM client_1
WHERE SELLER_DEPARTMENT = -1;

DROP TABLE IF EXISTS vendeur_1;
CREATE TABLE vendeur_1 AS
SELECT * 
FROM client_1 
WHERE SELLER_DEPARTMENT = -1;

SELECT COUNT(*) FROM vendeur_1;
SELECT * FROM vendeur_1 LIMIT 100;
SELECT SELLER_COUNTRY FROM vendeur_1 GROUP BY SELLER_COUNTRY;

DROP TABLE IF EXISTS vendeur_2;
CREATE TABLE vendeur_2 AS
SELECT * 
FROM client_1 
WHERE SELLER_DEPARTMENT <> -1;

SELECT COUNT(*) FROM vendeur_2;
SELECT * FROM vendeur_2 LIMIT 100;
SELECT SELLER_COUNTRY FROM vendeur_2 GROUP BY SELLER_COUNTRY;

SELECT 
	(SELECT COUNT(*)
	FROM vendeur_2
	WHERE 
		UPPER(BUYING_DATE) LIKE '%MAI%' AND 
		SELLER_SCORE_AVERAGE > (SELECT AVG(SELLER_SCORE_AVERAGE) FROM vendeur_2)
	)
	 / COUNT(*) FROM vendeur_2
	 WHERE 
		UPPER(BUYING_DATE) LIKE '%MAI%';

SELECT
	PRODUCT_FAMILY,
	SUM(CASE 
        WHEN INSTR(PURCHASE_COUNT, "<") <> 0 AND SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1) = "" THEN SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, "<") + 1) / 2
        WHEN INSTR(PURCHASE_COUNT, "<") <> 0 THEN SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1) + (SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, "<") + 1) - SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1)) / 2
        WHEN INSTR(PURCHASE_COUNT, ">") <> 0 THEN SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, ">") + 1) / 2
        ELSE 0
    END) AS PURCHASE_COUNT_AVG
FROM client_1
GROUP BY PRODUCT_FAMILY;

SELECT
	SUM(CASE 
		WHEN INSTR(PURCHASE_COUNT, "<") <> 0 AND SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1) = "" THEN SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, "<") + 1) / 2
		WHEN INSTR(PURCHASE_COUNT, "<") <> 0 THEN SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1) + (SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, "<") + 1) - SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1)) / 2
		WHEN INSTR(PURCHASE_COUNT, ">") <> 0 THEN SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, ">") + 1) / 2
		ELSE 0
	END) AS FOREIGNER,
	(SELECT SUM(CASE 
		WHEN INSTR(PURCHASE_COUNT, "<") <> 0 AND SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1) = "" THEN SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, "<") + 1) / 2
		WHEN INSTR(PURCHASE_COUNT, "<") <> 0 THEN SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1) + (SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, "<") + 1) - SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1)) / 2
		WHEN INSTR(PURCHASE_COUNT, ">") <> 0 THEN SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, ">") + 1) / 2
		ELSE 0
	END) FROM vendeur_2) AS FRENCH
FROM vendeur_1;

DROP TABLE IF EXISTS produit_1;
CREATE TABLE produit_1 AS
SELECT 
	PRODUCT_TYPE, 
	PRODUCT_FAMILY,
	SUM((CASE 
		WHEN INSTR(PURCHASE_COUNT, "<") <> 0 AND SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1) = "" THEN SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, "<") + 1) / 2
		WHEN INSTR(PURCHASE_COUNT, "<") <> 0 THEN SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1) + (SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, "<") + 1) - SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1)) / 2
		WHEN INSTR(PURCHASE_COUNT, ">") <> 0 THEN SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, ">") + 1) / 2
		ELSE 0
	END) * (CASE 
		WHEN INSTR(ITEM_PRICE, "<") <> 0 AND SUBSTR(ITEM_PRICE, 1, INSTR(ITEM_PRICE, "<") - 1) = "" THEN SUBSTR(ITEM_PRICE, INSTR(ITEM_PRICE, "<") + 1) / 2
		WHEN INSTR(ITEM_PRICE, "<") <> 0 THEN SUBSTR(ITEM_PRICE, 1, INSTR(ITEM_PRICE, "<") - 1) + (SUBSTR(ITEM_PRICE, INSTR(ITEM_PRICE, "<") + 1) - SUBSTR(ITEM_PRICE, 1, INSTR(ITEM_PRICE, "<") - 1)) / 2
		WHEN INSTR(ITEM_PRICE, ">") <> 0 THEN SUBSTR(ITEM_PRICE, INSTR(ITEM_PRICE, ">") + 1) / 2
		ELSE 0
	END)) AS AMOUNT
FROM vendeur_1 
GROUP BY PRODUCT_TYPE, PRODUCT_FAMILY;

SELECT COUNT(*) FROM produit_1;
SELECT * FROM produit_1 LIMIT 100;

DROP TABLE IF EXISTS produit_2;
CREATE TABLE produit_2 AS
SELECT 
	PRODUCT_TYPE, 
	PRODUCT_FAMILY,
	SUM((CASE 
		WHEN INSTR(PURCHASE_COUNT, "<") <> 0 AND SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1) = "" THEN SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, "<") + 1) / 2
		WHEN INSTR(PURCHASE_COUNT, "<") <> 0 THEN SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1) + (SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, "<") + 1) - SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1)) / 2
		WHEN INSTR(PURCHASE_COUNT, ">") <> 0 THEN SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, ">") + 1) / 2
		ELSE 0
	END) * (CASE 
		WHEN INSTR(ITEM_PRICE, "<") <> 0 AND SUBSTR(ITEM_PRICE, 1, INSTR(ITEM_PRICE, "<") - 1) = "" THEN SUBSTR(ITEM_PRICE, INSTR(ITEM_PRICE, "<") + 1) / 2
		WHEN INSTR(ITEM_PRICE, "<") <> 0 THEN SUBSTR(ITEM_PRICE, 1, INSTR(ITEM_PRICE, "<") - 1) + (SUBSTR(ITEM_PRICE, INSTR(ITEM_PRICE, "<") + 1) - SUBSTR(ITEM_PRICE, 1, INSTR(ITEM_PRICE, "<") - 1)) / 2
		WHEN INSTR(ITEM_PRICE, ">") <> 0 THEN SUBSTR(ITEM_PRICE, INSTR(ITEM_PRICE, ">") + 1) / 2
		ELSE 0
	END)) AS AMOUNT
FROM vendeur_2 
GROUP BY PRODUCT_TYPE, PRODUCT_FAMILY;

SELECT COUNT(*) FROM produit_2;
SELECT * FROM produit_2 LIMIT 100;

DROP TABLE IF EXISTS produits;
CREATE TABLE produits AS
SELECT 
	PRODUCT_TYPE, 
	PRODUCT_FAMILY,
	SUM((CASE 
		WHEN INSTR(PURCHASE_COUNT, "<") <> 0 AND SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1) = "" THEN SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, "<") + 1) / 2
		WHEN INSTR(PURCHASE_COUNT, "<") <> 0 THEN SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1) + (SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, "<") + 1) - SUBSTR(PURCHASE_COUNT, 1, INSTR(PURCHASE_COUNT, "<") - 1)) / 2
		WHEN INSTR(PURCHASE_COUNT, ">") <> 0 THEN SUBSTR(PURCHASE_COUNT, INSTR(PURCHASE_COUNT, ">") + 1) / 2
		ELSE 0
	END) * (CASE 
		WHEN INSTR(ITEM_PRICE, "<") <> 0 AND SUBSTR(ITEM_PRICE, 1, INSTR(ITEM_PRICE, "<") - 1) = "" THEN SUBSTR(ITEM_PRICE, INSTR(ITEM_PRICE, "<") + 1) / 2
		WHEN INSTR(ITEM_PRICE, "<") <> 0 THEN SUBSTR(ITEM_PRICE, 1, INSTR(ITEM_PRICE, "<") - 1) + (SUBSTR(ITEM_PRICE, INSTR(ITEM_PRICE, "<") + 1) - SUBSTR(ITEM_PRICE, 1, INSTR(ITEM_PRICE, "<") - 1)) / 2
		WHEN INSTR(ITEM_PRICE, ">") <> 0 THEN SUBSTR(ITEM_PRICE, INSTR(ITEM_PRICE, ">") + 1) / 2
		ELSE 0
	END)) AS AMOUNT
FROM (SELECT *
	FROM vendeur_1
	UNION ALL
	SELECT *
	FROM vendeur_2) as t
GROUP BY PRODUCT_TYPE, PRODUCT_FAMILY;

SELECT COUNT(*) FROM produits;
SELECT * FROM produits LIMIT 100;